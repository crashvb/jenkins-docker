#!/bin/bash

set -e -o pipefail

# Note: Must be done every time as it is referenced in supervisord configuration
generate_password jenkins_keystore

# Configure: jenkins
if [[ ! -e "${EP_RUN}" ]] ; then
	log "Configuring $(basename "${0}") for first run ..."

	# Generate passwords (needed for CasC) ...
	generate_password jenkins_admin

	# Generate ssh keys ...
	generate_sshkey jenkins

	# Generate keypairs ...
	generate_rsakey jenkins

	ln --symbolic /etc/ssl/certs/jenkinsca.crt /usr/share/ca-certificates/
	echo jenkinsca.crt >> /etc/ca-certificates.conf
	update-ca-certificates

	# Generate java keystore ...
	if [[ -e "${JENKINS_HOME}/jenkins.jks" ]] ; then
		log "Using jenkins.jks from ${JENKINS_HOME} ..."
	else
		log "Generating: jenkins.jks"

		log "	p12"
		# Note: The key password is derived from store password, and needs to be aligned for jenkins to start
		openssl pkcs12 \
			-certfile /etc/ssl/certs/jenkinsca.crt \
			-export \
			-in /etc/ssl/certs/jenkins.crt \
			-inkey /etc/ssl/private/jenkins.key \
			-name jenkins.local \
			-out /dev/shm/jenkins.p12 \
			-passout "pass:${JENKINS_KEYSTORE_PASSWORD}"

		log "	jks"
		keytool \
			-destalias jenkins.local \
			-destkeystore "${JENKINS_HOME}/jenkins.jks" \
			-deststorepass "${JENKINS_KEYSTORE_PASSWORD}" \
			-deststoretype JKS \
			-importkeystore \
			-srcalias jenkins.local \
			-srckeystore /dev/shm/jenkins.p12 \
			-srcstorepass "${JENKINS_KEYSTORE_PASSWORD}" \
			-srcstoretype PKCS12

		rm /dev/shm/jenkins.p12
	fi

	# Volume initialization
	if [[ ! -e "${JENKINS_HOME}/jenkins.war" ]] ; then
		log "Initializing data volume ..."

		log "Deploying: jenkins.war.${JENKINS_VERSION}"
		cp --no-clobber "${JENKINS_SHARE}/jenkins.war.${JENKINS_VERSION}" "${JENKINS_HOME}/jenkins.war"

		log "Deploying reference ..."
		cp --no-clobber --recursive "${JENKINS_SHARE}/ref/"* "${JENKINS_HOME}/"
	else
		log "Skipping data volume initialization ..."
	fi

	if [[ -n "${JENKINS_PLUGINS}" ]] ; then
		log "Installing plugins: ${JENKINS_PLUGINS} ..."
		IFS="," read -a jenkins_plugins -r <<< "${JENKINS_PLUGINS}"
		jenkins-plugin-cli --latest --latest-specified --plugin-download-directory "${JENKINS_HOME}/plugins/" --plugins "${jenkins_plugins[@]}" --view-security-warnings --war "${JENKINS_HOME}/jenkins.war"
	fi

	log "Applying ownership and permissions ..."
	find "${JENKINS_HOME}" \( \! -user jenkins -o \! -group jenkins \) -exec chown jenkins:jenkins {} \;
fi

